CREATE_CATEGORY=insert into cat (name_cat) values (?);
CREATE_EXHIBITION=insert into expo (id_cat, id_hall, name_expo, date_expo, price) values (?, ?, ?, ?, ?);
CREATE_AUTO=insert into auto (name_hall, adress) values (?, ?); 
CREATE_NEW_USER=insert into users (name_user, login, pass, role) values (?, ?, ?, ?); 
note.getbyid=select *  \
from kino \
join auto on expo.id_hall = auto.id \
join cat on expo.id_cat = cat.id_cat \
where expo.id_expo = ?; 
FIND_ALL_CAT=select * from cat;
FIND_ALL_EXHIBITION=select * from expo \
join cat on cat.id_cat = expo.id_cat \
join auto on auto.id = expo.id_hall;
FIND_ALL_EXHIBITION_BOTH_FILTER=select * from expo \
join cat on cat.id_cat = expo.id_cat \
join auto on auto.id = expo.id_hall \
where expo.id_hall = ? \
and expo.id_cat = ?; 
FIND_ALL_EXHIBITION_CAT_FILTER=select * from expo \
join cat on cat.id_cat = expo.id_cat \
join auto on auto.id = expo.id_hall \
where expo.id_cat=?;
FIND_ALL_EXHIBITION_AUTO_FILTER=select * from expo \
join cat on cat.id_cat = expo.id_cat \
join auto on auto.id = expo.id_hall \
where expo.id_hall=?;
FIND_ALL_AUTO=select * from auto;
GET_LAST_TICKET_ID=select max(id_ticket) \
from ticket;
GET_ROWS_TICKET=select count(ticket.id_ticket) as amoung \
from ticket \
where ticket.id_user = ?; 
GET_USER_BY_LOGIN=select * \
from users \
where users.login = ?;
INSERT_PAYMENT=insert into payment (id_user, id_ticket) values (?, ?); 
INSERT_TICKET=insert into ticket (id_expo, id_user) values (?, ?); 
USER_TICKETS=select ticket.id_ticket, expo.name_expo, auto.name_hall, cat.name_cat, auto.adress, expo.price, expo.date_expo \
from ticket \
join expo on ticket.id_expo = expo.id_expo \
join auto on expo.id_hall = auto.id \
join cat on expo.id_cat = cat.id_cat \
where ticket.id_user = ? \
order by id_ticket  limit 5 offset ?;